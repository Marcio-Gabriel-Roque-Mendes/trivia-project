{"ast":null,"code":"var _jsxFileName = \"/home/marcio/Documentos/Projetos/TodosProjetos/Portfolio/Project Trivia enviado GitHub/triviaa-game/src/pages/Feedback.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport createEmailUrl from '../services/createEmailUrl';\nimport { addInRanking } from '../services/saveRanking';\nimport Header from '../components/Header';\nimport imageBackgound from './../assets/imageBackground.jpeg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Feedback extends React.Component {\n  constructor() {\n    super(...arguments);\n\n    this.handleClick = () => {\n      const {\n        history\n      } = this.props;\n      history.push('/');\n    };\n\n    this.handleClickRanking = () => {\n      const {\n        history\n      } = this.props;\n      history.push('/ranking');\n    };\n\n    this.savePlayerInRanking = () => {\n      const {\n        name,\n        score,\n        gravatarEmail\n      } = this.props;\n      const playerInfo = {\n        name,\n        score,\n        picture: createEmailUrl(gravatarEmail)\n      };\n      addInRanking(playerInfo);\n    };\n  }\n\n  componentDidMount() {\n    this.savePlayerInRanking();\n  }\n\n  render() {\n    const {\n      name,\n      gravatarEmail,\n      score,\n      assertions\n    } = this.props;\n    const MIN_ASSERTIONS = 3;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"h-screen w-screen\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-black text-white w-screen h-screen flex items-center justify-center bg-cover blur\",\n        style: {\n          backgroundImage: `url(${imageBackgound})`\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"absolute w-1/3 top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex-col items-center justify-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center justify-center\",\n            children: /*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center justify-center mt-12 text-center text-white text-3xl font-bold\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex-col items-center justify-center\",\n              children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n                \"data-testid\": \"feedback-text\",\n                children: assertions < MIN_ASSERTIONS ? 'Could be better...' : 'Well Done!'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 48,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                \"data-testid\": \"feedback-total-question\",\n                children: [\"Acertos: \", assertions]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 53,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                \"data-testid\": \"btn-play-again\",\n                onClick: this.handleClick,\n                className: \"btn btn-secondary mr-5 mt-6\",\n                children: \"Play Again\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 56,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                \"data-testid\": \"btn-ranking\",\n                onClick: this.handleClickRanking,\n                className: \"btn btn-primary\",\n                children: \"Ranking\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nFeedback.propTypes = {\n  name: PropTypes.string.isRequired,\n  score: PropTypes.number.isRequired,\n  gravatarEmail: PropTypes.string.isRequired,\n  assertions: PropTypes.number.isRequired,\n  // Aqui era string, mas por exigencias no testes dizendo que era number, foi alterado\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired\n  }).isRequired\n}; // Feedback.defaultProps = {\n//   assertions: {},\n// };\n\nconst mapStateToProps = globalState => ({\n  name: globalState.player.name,\n  gravatarEmail: globalState.player.gravatarEmail,\n  score: globalState.player.score,\n  assertions: globalState.player.assertions\n});\n\nexport default connect(mapStateToProps)(Feedback);","map":{"version":3,"names":["React","connect","PropTypes","createEmailUrl","addInRanking","Header","imageBackgound","Feedback","Component","handleClick","history","props","push","handleClickRanking","savePlayerInRanking","name","score","gravatarEmail","playerInfo","picture","componentDidMount","render","assertions","MIN_ASSERTIONS","backgroundImage","propTypes","string","isRequired","number","shape","func","mapStateToProps","globalState","player"],"sources":["/home/marcio/Documentos/Projetos/TodosProjetos/Portfolio/Project Trivia enviado GitHub/triviaa-game/src/pages/Feedback.js"],"sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport createEmailUrl from '../services/createEmailUrl';\nimport { addInRanking } from '../services/saveRanking';\nimport Header from '../components/Header';\nimport imageBackgound from './../assets/imageBackground.jpeg'\n\nclass Feedback extends React.Component {\n  componentDidMount() {\n    this.savePlayerInRanking();\n  }\n\n  handleClick = () => {\n    const { history } = this.props;\n    history.push('/');\n  };\n\n  handleClickRanking = () => {\n    const { history } = this.props;\n    history.push('/ranking');\n  };\n\n  savePlayerInRanking = () => {\n    const { name, score, gravatarEmail } = this.props;\n    const playerInfo = {\n      name,\n      score,\n      picture: createEmailUrl(gravatarEmail),\n    };\n    addInRanking(playerInfo);\n  };\n\n  render() {\n    const { name, gravatarEmail, score, assertions } = this.props;\n    const MIN_ASSERTIONS = 3;\n    return (\n      <div className='h-screen w-screen'>\n        <div className='bg-black text-white w-screen h-screen flex items-center justify-center bg-cover blur'\n        style={{ backgroundImage: `url(${imageBackgound})`}}></div>        \n        <div className='absolute w-1/3 top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2'>\n          <div className='flex-col items-center justify-center'>\n            <div className='flex items-center justify-center'>\n              <Header />\n            </div>\n            <div className='flex items-center justify-center mt-12 text-center text-white text-3xl font-bold'>\n              <div className='flex-col items-center justify-center'>\n                <h1 data-testid='feedback-text'>\n                  {assertions < MIN_ASSERTIONS\n                    ? 'Could be better...'\n                    : 'Well Done!'}\n                </h1>\n                <p data-testid='feedback-total-question'>\n                  Acertos: {assertions}\n                </p>\n                <button\n                  type='button'\n                  data-testid='btn-play-again'\n                  onClick={this.handleClick}\n                  className='btn btn-secondary mr-5 mt-6'>\n                  Play Again\n                </button>\n                <button\n                  type='button'\n                  data-testid='btn-ranking'\n                  onClick={this.handleClickRanking}\n                  className='btn btn-primary'>\n                  Ranking\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nFeedback.propTypes = {\n  name: PropTypes.string.isRequired,\n  score: PropTypes.number.isRequired,\n  gravatarEmail: PropTypes.string.isRequired,\n  assertions: PropTypes.number.isRequired, // Aqui era string, mas por exigencias no testes dizendo que era number, foi alterado\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired,\n  }).isRequired,\n};\n\n// Feedback.defaultProps = {\n//   assertions: {},\n// };\n\nconst mapStateToProps = (globalState) => ({\n  name: globalState.player.name,\n  gravatarEmail: globalState.player.gravatarEmail,\n  score: globalState.player.score,\n  assertions: globalState.player.assertions,\n});\n\nexport default connect(mapStateToProps)(Feedback);\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}